services:
  db:
    build:
      context: .
      dockerfile: Dockerfile.db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: medscheduler 
    ports:
      - "5432:5432"
    volumes:
      - /home/githubuser/dbData:/var/lib/postgresql/data  # Изменено на прямой маппинг папки
      - ./sql/0-create_tables.sql:/docker-entrypoint-initdb.d/0-create_tables.sql # Явно указываем имя файла
      - ./sql/00-init-user.sql:/docker-entrypoint-initdb.d/00-init-user.sql # Добавлен скрипт инициализации пользователя
      - ./sql/00-init-cron.sql:/docker-entrypoint-initdb.d/00-init-cron.sql
      - ./sql/10-cleanup_old_data.sql:/docker-entrypoint-initdb.d/10-cleanup_old_data.sql
      - ./sql/20-cleanup_waitlist.sql:/docker-entrypoint-initdb.d/20-cleanup_waitlist.sql
      - ./sql/30-expire_waitlisters.sql:/docker-entrypoint-initdb.d/30-expire_waitlisters.sql
      - ./sql/40-notify_about_record.sql:/docker-entrypoint-initdb.d/40-notify_about_record.sql
      - ./sql/50-notify_waitlist.sql:/docker-entrypoint-initdb.d/50-notify_waitlist.sql
    command: 
      - "postgres"
      - "-c"
      - "shared_preload_libraries=pg_cron"
      - "-c"
      - "cron.database_name=medscheduler"
      - "-c"
      - "log_statement=all" 
      - "-c"
      - "log_destination=stderr"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
      timeout: 3s

  server:
    build:
      context: .
      dockerfile: Dockerfile.server
    ports:
      - "8080:8080"
    environment:
      DB_HOST: db
      DB_USER: meduser
      DB_PASSWORD: 3671920119
      DB_NAME: medscheduler
    depends_on:
      db:
        condition: service_healthy

